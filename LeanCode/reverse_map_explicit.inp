|!map!| : ∀ {α β : Type}, (α → β) → List α → List β
|!reverse!| : ∀ {α : Type}, List α → List α
|!map_reverse!| : ∀ {α β : Type} (f : α → β) (l : List α),
  @Eq (List β) (@map α β f (@reverse α l)) (@reverse β (@map α β f l))
|!reverse_reverse!| : ∀ {α : Type} (as : List α),
  @Eq (List α) (@reverse α (@reverse α as)) as
A B : Type
f : A → B
xs : List A
|!neg_goal!| : Not (@Eq (List B)
  (@reverse B (@map A B f (@reverse A xs))) (@map A B f xs))
⊢ False